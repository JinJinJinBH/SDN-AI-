#include<iostream>
#include<vector>
#include<io.h>
using namespace std;
#define filePath  "C:\\Users\\hp\\Desktop\\data1"
vector<string> files;
void getFiles( string path, vector<string>& files ) {
	//文件句柄
	long   hFile   =   0;
	//文件信息
	struct _finddata_t fileinfo;
	string p;
	if((hFile = _findfirst(p.assign(path).append("\\*").c_str(),&fileinfo)) !=  -1) {
		do {
			//如果是目录,迭代之
			//如果不是,加入列表
			if((fileinfo.attrib &  _A_SUBDIR)) {
				if(strcmp(fileinfo.name,".") != 0  &&  strcmp(fileinfo.name,"..") != 0)
					getFiles( p.assign(path).append("\\").append(fileinfo.name), files );
			} else {
				files.push_back(p.assign(path).append("\\").append(fileinfo.name) );
			}
		} while(_findnext(hFile, &fileinfo)  == 0);
		_findclose(hFile);
	}
}
bool Judge(long long time)//是攻击流量返回真 
{
	if(time>=1499258820&&time<=1499260200) return true;
	if(time>=1499260440&&time<=1499261700) return true;
	if(time>=1499262180&&time<=1499263200) return true;
	if(time>=1499263800&&time<=1499264580) return true;
	if(time>=1499278320&&time<=1499279520) return true;
	return false; 
}
int main()
{
	int i,sp,dp,size;
	long long time;
	char temp1[100],temp2[100],temp3[100],temp4[100],temp5[100],temp6[100],temp7[100],temp8[100],Src[100],Dst[100];
	FILE *fp,*resA,*resN;
	getFiles(filePath, files);
	if((resN=fopen("NormalData.txt","w"))==NULL) {
		printf("The file can not be open!");
		exit(1);//结束程序的执行
	}
	if((resA=fopen("AttackData.txt","w"))==NULL) {
		printf("The file can not be open!");
		exit(1);//结束程序的执行
	}
	cout<<files.size()<<endl;
	for(i=0;i<files.size();i++)
	{
		if((fp=fopen(files[i].c_str(),"r"))==NULL) {
			printf("The file can not be open!");
			exit(1);//结束程序的执行
		}
		cout<<files[i].c_str()<<endl;
		while(!feof(fp))
		{
			fscanf(fp,"%s %lld %s %s %s %s %s %s %s %d %s %d %s %d\n",temp1,&time,temp2,Src,temp3,Dst,temp4,temp5,temp6,&sp,temp7,&dp,temp8,&size);
			if(Judge(time))
			{
				fprintf(resA,"%s %lld %s %s %s %s %s %s %s %d %s %d %s %d\n",temp1,time,temp2,Src,temp3,Dst,temp4,temp5,temp6,sp,temp7,dp,temp8,size);
			} 
			else
			{
				fprintf(resN,"%s %lld %s %s %s %s %s %s %s %d %s %d %s %d\n",temp1,time,temp2,Src,temp3,Dst,temp4,temp5,temp6,sp,temp7,dp,temp8,size);
			}
		}
	}
	return 0;
}
